import React, { useContext } from "react";
import { Button, TextField } from "@mui/material";
import { Container, Stack } from "@mui/system";
import { useForm } from "react-hook-form";

import TaskContext from "../../contexts/task-context";
import { Task } from "../../types/task";
import useHttp from "../../hooks/useHttp";

type FormValues = {
  name: string;
};

const TaskForm: React.FC = () => {
  const { register, handleSubmit, reset } = useForm<FormValues>();

  const taskCtx = useContext(TaskContext);

  const { client } = useHttp();

  // Handler for Add Task button.
  const addTaskHandler = (task: Task) => {
    // send POST request and append the response data to array `tasks`.
    // The response comes with an ID generated by the backend DB.
    client.post("/tasks", task).then((response) => {
      if (response.data.error !== undefined && response.data.error !== "") {
        alert(`Error from server: ${response.data.error}`);
        return;
      }
      taskCtx.addTask(response.data);
    });
  };

  const submitHandler = (event: React.FormEvent) => {
    event.preventDefault(); // prevent page refresh
    handleSubmit(addTaskHandler)();
    reset({ name: "" });
  };

  return (
    <Container maxWidth="sm" sx={{ pt: 5 }}>
      <Stack component="form" onSubmit={submitHandler} spacing={3}>
        <TextField
          required
          label="Task Name"
          {...register("name", { required: true })}
        />
        <Button type="submit" variant="contained" size="large">
          Add Task
        </Button>
      </Stack>
    </Container>
  );
};

export default TaskForm;
